// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.2.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace JM.SOLID.Principles.Tests.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.2.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class PaymentServiceFeatureFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
#line 1 "PaymentServiceFeature.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "PaymentServiceFeature", "\tIn order to avoid silly mistakes\r\n\tAs a Payment Service idot\r\n\tI want to test al" +
                    "l possible scecenarios", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "PaymentServiceFeature")))
            {
                global::JM.SOLID.Principles.Tests.Features.PaymentServiceFeatureFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(TestContext);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void AllThePaymentMethodShouldBeRunSuccessfullyForValidPaymentSchemes(string allowedPaymentSchemes, string accountNumber, string balance, string accountStatus, string paymentScheme, string creditorAccountNumber, string debtorAccountNumber, string amount, string paymentDate, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("All the payment method should be run successfully for valid payment schemes", exampleTags);
#line 8
this.ScenarioSetup(scenarioInfo);
#line 9
testRunner.Given(string.Format("I have an account {0},{1},{2},{3}", accountNumber, balance, accountStatus, allowedPaymentSchemes), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 10
testRunner.And(string.Format("I have Payment Request details {0},{1},{2},{3},{4}", paymentScheme, creditorAccountNumber, debtorAccountNumber, amount, paymentDate), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 11
testRunner.When("I make the payment", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 12
testRunner.Then("The payment should be successful", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("All the payment method should be run successfully for valid payment schemes: Fast" +
            "erPayments")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "PaymentServiceFeature")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "FasterPayments")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AllowedPaymentSchemes", "FasterPayments")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AccountNumber", "AC12345")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Balance", "100.50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AccountStatus", "Live")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PaymentScheme", "FasterPayments")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CreditorAccountNumber", "AC1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DebtorAccountNumber", "AC12345")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Amount", "50.00")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PaymentDate", "2018-04-30")]
        public virtual void AllThePaymentMethodShouldBeRunSuccessfullyForValidPaymentSchemes_FasterPayments()
        {
#line 8
this.AllThePaymentMethodShouldBeRunSuccessfullyForValidPaymentSchemes("FasterPayments", "AC12345", "100.50", "Live", "FasterPayments", "AC1234", "AC12345", "50.00", "2018-04-30", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("All the payment method should be run successfully for valid payment schemes: Bacs" +
            "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "PaymentServiceFeature")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Bacs")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AllowedPaymentSchemes", "Bacs")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AccountNumber", "AC12346")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Balance", "55.35")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AccountStatus", "Live")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PaymentScheme", "Bacs")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CreditorAccountNumber", "AC1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DebtorAccountNumber", "AC12345")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Amount", "40.00")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PaymentDate", "2018-04-30")]
        public virtual void AllThePaymentMethodShouldBeRunSuccessfullyForValidPaymentSchemes_Bacs()
        {
#line 8
this.AllThePaymentMethodShouldBeRunSuccessfullyForValidPaymentSchemes("Bacs", "AC12346", "55.35", "Live", "Bacs", "AC1234", "AC12345", "40.00", "2018-04-30", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("All the payment method should be run successfully for valid payment schemes: Chap" +
            "s")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "PaymentServiceFeature")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Chaps")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AllowedPaymentSchemes", "Chaps")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AccountNumber", "AC12347")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Balance", "45.50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AccountStatus", "Live")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PaymentScheme", "Chaps")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CreditorAccountNumber", "AC1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DebtorAccountNumber", "AC12345")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Amount", "50.00")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PaymentDate", "2018-04-30")]
        public virtual void AllThePaymentMethodShouldBeRunSuccessfullyForValidPaymentSchemes_Chaps()
        {
#line 8
this.AllThePaymentMethodShouldBeRunSuccessfullyForValidPaymentSchemes("Chaps", "AC12347", "45.50", "Live", "Chaps", "AC1234", "AC12345", "50.00", "2018-04-30", ((string[])(null)));
#line hidden
        }
        
        public virtual void InvalidDebtorAllowedPaymentSchemesShouldFailThePayment(string allowedPaymentSchemes, string accountNumber, string balance, string accountStatus, string paymentScheme, string creditorAccountNumber, string debtorAccountNumber, string amount, string paymentDate, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Invalid debtor Allowed Payment Schemes should fail the payment", exampleTags);
#line 19
this.ScenarioSetup(scenarioInfo);
#line 20
testRunner.Given(string.Format("I have an account {0},{1},{2},{3}", accountNumber, balance, accountStatus, allowedPaymentSchemes), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 21
testRunner.And(string.Format("I have Payment Request details {0},{1},{2},{3},{4}", paymentScheme, creditorAccountNumber, debtorAccountNumber, amount, paymentDate), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 22
testRunner.When("I make the payment", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 23
testRunner.Then("The payment should be fail", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Invalid debtor Allowed Payment Schemes should fail the payment: Chaps")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "PaymentServiceFeature")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Chaps")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AllowedPaymentSchemes", "Chaps")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AccountNumber", "AC12345")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Balance", "100.50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AccountStatus", "Live")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PaymentScheme", "FasterPayments")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CreditorAccountNumber", "AC1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DebtorAccountNumber", "AC12345")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Amount", "50.00")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PaymentDate", "2018-04-30")]
        public virtual void InvalidDebtorAllowedPaymentSchemesShouldFailThePayment_Chaps()
        {
#line 19
this.InvalidDebtorAllowedPaymentSchemesShouldFailThePayment("Chaps", "AC12345", "100.50", "Live", "FasterPayments", "AC1234", "AC12345", "50.00", "2018-04-30", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Invalid debtor Allowed Payment Schemes should fail the payment: FasterPayments")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "PaymentServiceFeature")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "FasterPayments")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AllowedPaymentSchemes", "FasterPayments")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AccountNumber", "AC12346")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Balance", "55.35")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AccountStatus", "Live")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PaymentScheme", "Bacs")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CreditorAccountNumber", "AC1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DebtorAccountNumber", "AC12345")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Amount", "40.00")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PaymentDate", "2018-04-30")]
        public virtual void InvalidDebtorAllowedPaymentSchemesShouldFailThePayment_FasterPayments()
        {
#line 19
this.InvalidDebtorAllowedPaymentSchemesShouldFailThePayment("FasterPayments", "AC12346", "55.35", "Live", "Bacs", "AC1234", "AC12345", "40.00", "2018-04-30", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Invalid debtor Allowed Payment Schemes should fail the payment: Bacs")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "PaymentServiceFeature")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Bacs")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AllowedPaymentSchemes", "Bacs")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AccountNumber", "AC12347")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Balance", "45.50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AccountStatus", "Live")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PaymentScheme", "Chaps")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CreditorAccountNumber", "AC1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DebtorAccountNumber", "AC12345")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Amount", "50.00")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PaymentDate", "2018-04-30")]
        public virtual void InvalidDebtorAllowedPaymentSchemesShouldFailThePayment_Bacs()
        {
#line 19
this.InvalidDebtorAllowedPaymentSchemesShouldFailThePayment("Bacs", "AC12347", "45.50", "Live", "Chaps", "AC1234", "AC12345", "50.00", "2018-04-30", ((string[])(null)));
#line hidden
        }
        
        public virtual void ChapPaymentTypeShouldBeFailedWhenTheDebitorAccountStatusIsNotLIVE(string allowedPaymentSchemes, string accountNumber, string balance, string accountStatus, string paymentScheme, string creditorAccountNumber, string debtorAccountNumber, string amount, string paymentDate, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Chap payment type should be failed when the debitor account status is not LIVE", exampleTags);
#line 30
this.ScenarioSetup(scenarioInfo);
#line 31
testRunner.Given(string.Format("I have an account {0},{1},{2},{3}", accountNumber, balance, accountStatus, allowedPaymentSchemes), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 32
testRunner.And(string.Format("I have Payment Request details {0},{1},{2},{3},{4}", paymentScheme, creditorAccountNumber, debtorAccountNumber, amount, paymentDate), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 33
testRunner.When("I make the payment", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 34
testRunner.Then("The payment should be fail", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Chap payment type should be failed when the debitor account status is not LIVE: C" +
            "haps")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "PaymentServiceFeature")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Chaps")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AllowedPaymentSchemes", "Chaps")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AccountNumber", "AC12345")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Balance", "100.50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AccountStatus", "Disabled")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PaymentScheme", "Chaps")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CreditorAccountNumber", "AC1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DebtorAccountNumber", "AC12345")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Amount", "50.00")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PaymentDate", "2018-04-30")]
        public virtual void ChapPaymentTypeShouldBeFailedWhenTheDebitorAccountStatusIsNotLIVE_Chaps()
        {
#line 30
this.ChapPaymentTypeShouldBeFailedWhenTheDebitorAccountStatusIsNotLIVE("Chaps", "AC12345", "100.50", "Disabled", "Chaps", "AC1234", "AC12345", "50.00", "2018-04-30", ((string[])(null)));
#line hidden
        }
        
        public virtual void FasterPaymentsPaymentTypeShouldBeFailedWhenTheDebitorAccountBanceIsLessThanTheRequestedPaymentAmount(string allowedPaymentSchemes, string accountNumber, string balance, string accountStatus, string paymentScheme, string creditorAccountNumber, string debtorAccountNumber, string amount, string paymentDate, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("FasterPayments payment type should be failed when the debitor account bance is le" +
                    "ss than the requested payment amount", exampleTags);
#line 39
 this.ScenarioSetup(scenarioInfo);
#line 40
testRunner.Given(string.Format("I have an account {0},{1},{2},{3}", accountNumber, balance, accountStatus, allowedPaymentSchemes), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 41
testRunner.And(string.Format("I have Payment Request details {0},{1},{2},{3},{4}", paymentScheme, creditorAccountNumber, debtorAccountNumber, amount, paymentDate), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 42
testRunner.When("I make the payment", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 43
testRunner.Then("The payment should be fail", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("FasterPayments payment type should be failed when the debitor account bance is le" +
            "ss than the requested payment amount: FasterPayments")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "PaymentServiceFeature")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "FasterPayments")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AllowedPaymentSchemes", "FasterPayments")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AccountNumber", "AC12345")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Balance", "30.35")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:AccountStatus", "Live")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PaymentScheme", "FasterPayments")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:CreditorAccountNumber", "AC1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:DebtorAccountNumber", "AC12345")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Amount", "50.00")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:PaymentDate", "2018-04-30")]
        public virtual void FasterPaymentsPaymentTypeShouldBeFailedWhenTheDebitorAccountBanceIsLessThanTheRequestedPaymentAmount_FasterPayments()
        {
#line 39
 this.FasterPaymentsPaymentTypeShouldBeFailedWhenTheDebitorAccountBanceIsLessThanTheRequestedPaymentAmount("FasterPayments", "AC12345", "30.35", "Live", "FasterPayments", "AC1234", "AC12345", "50.00", "2018-04-30", ((string[])(null)));
#line hidden
        }
    }
}
#pragma warning restore
#endregion
